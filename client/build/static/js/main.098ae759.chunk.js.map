{"version":3,"sources":["views/Authors.js","views/NewAuthor.js","views/EditAuthor.js","views/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Authors","props","useState","authors","setAuthors","useEffect","axios","get","then","res","data","sort","a","b","name","localeCompare","catch","err","console","log","className","to","map","auth","_id","onClick","e","delId","delete","filterAuthors","filter","response","NewAuthor","setName","errors","setErrors","history","useHistory","onSubmit","preventDefault","post","push","handleNewProductSubmit","message","onChange","target","value","type","EditAuthor","setAuth","id","useParams","put","handleEditSubmit","keyBeingUpdated","newValue","handleOnChange","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.098ae759.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Authors = (props) => {\r\n    // On first load this empty array will be displayed (shows nothing).\r\n    // When the data comes back and this state is set, it re-renders.\r\n    const[authors, setAuthors] = useState([]);\r\n\r\n    /*\r\n    Empty arr is second argument means this will only happenon the first render\r\n    of this component.\r\n    */\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api\")\r\n            .then((res) => {\r\n                setAuthors(res.data.sort((a,b)=>a.name.localeCompare(b.name)));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (delId) => {\r\n        axios\r\n        .delete(\"http://localhost:8000/api/\" + delId)\r\n        .then((res) => {\r\n            // It has successfully been deleted from the DATABASE\r\n            // It is still IN our state, we need to remove it from state.\r\n            const filterAuthors = authors.filter((auth) => {\r\n                return auth._id !== delId;\r\n            });\r\n\r\n            setAuthors(filterAuthors);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.response);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-25 p-4 rounded shadow\">\r\n            <Link to=\"/new\">Add an author</Link>\r\n            <p>We have quotes by:</p>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Author</th>\r\n                        <th>Actions available</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {authors.map((auth) => {\r\n                    return (\r\n                        <tr key={auth._id}>\r\n                            <td>\r\n                                <Link to={`/edit/${auth._id}`}>\r\n                                    <p>{auth.name}</p>\r\n                                </Link>\r\n                            </td>\r\n                            <td>\r\n                                <Link\r\n                                    to={`/edit/${auth._id}`}\r\n                                    className=\"btn btn-sm btn-outline-warning mx-1\"\r\n                                >\r\n                                    Edit\r\n                                </Link>\r\n                                <button\r\n                                    onClick={(e) => {\r\n                                        handleDelete(auth._id);\r\n                                    }}\r\n                                    className=\"btn btn-sm btn-outline-danger mx-1\"\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authors;","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst NewAuthor = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    // Used for routing the user to a new url.\r\n    const history = useHistory();\r\n\r\n    const handleNewProductSubmit = (e) => {\r\n        e.preventDefault(); // stop page refresh\r\n\r\n        const NewAuthor = {\r\n            name\r\n        };\r\n\r\n        axios\r\n            .post(\"http://localhost:8000/api\", NewAuthor)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                // Route user to the new product's page.\r\n                history.push(`/`);\r\n        })\r\n        .catch((err) => {\r\n            setErrors(err.response.data.errors);\r\n            console.log(err.response);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-25 p-4 rounded shadow\">\r\n            <Link to=\"/\">Home</Link>\r\n            <p>Add a new author:</p>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    handleNewProductSubmit(e);\r\n                }}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label className=\"h6\">Name:</label>\r\n                    {errors?.name && (\r\n                        <span className=\"text-danger\"> {errors?.name?.message}</span>\r\n                    )}\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setName(e.target.value);\r\n                        }}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <Link to=\"/\" className=\"btn btn-sm btn-outline-warning mx-1\">Cancel</Link>\r\n                <button className=\"btn btn-sm btn-outline-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewAuthor;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";;\r\n\r\nconst EditAuthor = (props) => {\r\n    const[auth, setAuth] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    /* \r\n    Empty arr as second argument means this will only happen on the first render\r\n    of this component.\r\n    */\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/\" + id)\r\n            .then((res) => {\r\n                setAuth(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [id]);\r\n\r\n    const handleOnChange = (e) => {\r\n        const keyBeingUpdated = e.target.name;\r\n        const newValue = e.target.value;\r\n\r\n        setAuth({ ...auth, [keyBeingUpdated]: newValue });\r\n    }\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        axios\r\n            .put(\"http://localhost:8000/api/edit/\" + auth._id, auth)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                // Route user to the new destination's page.\r\n                history.push(`/`);\r\n            })\r\n            .catch((err) => {\r\n                // THIS CATCH only triggers because our controller uses\r\n                // res.status(400).json(err);\r\n                setErrors(err.response.data.errors);\r\n                console.log(err.response);\r\n            });\r\n        };\r\n    \r\n        if (auth === null) {\r\n            // return \"We're sorry, but we could not find the author you are looking for. Would you like to add this author to our database?\";\r\n            return (\r\n                <div>\r\n                    <h6 className=\"text-danger\">We're sorry, but we could not find the author you are looking for. Would you like to add this author to our database?</h6>\r\n                    <Link to=\"/new\">Add an author</Link>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        return (\r\n            <div className=\"w-25 p-4 rounded shadow\">\r\n                <Link to=\"/\">Home</Link>\r\n                <p>Edit this author</p>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        handleEditSubmit(e);\r\n                    }}\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <label className=\"h6\">Name</label>\r\n                        {errors?.name && (\r\n                            <span className=\"text-danger\"> {errors?.name?.message}</span>\r\n                        )}\r\n                        <input\r\n                            onChange={(e) => {\r\n                                handleOnChange(e);\r\n                            }}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={auth.name}\r\n                            name=\"name\"\r\n                        />\r\n                    </div>\r\n                    \r\n                    <Link to=\"/\" className=\"btn btn-sm btn-outline-warning mx-1\">Cancel</Link>\r\n                    <button className=\"btn btn-sm btn-outline-success\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default EditAuthor;","import React from \"react\";\r\n\r\nconst NotFound = (props) => {\r\n    return <div>Page not found ... </div>;\r\n};\r\n\r\nexport default NotFound;","// import logo from './logo.svg';\nimport './App.css';\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Authors from \"./views/Authors\";\nimport NewAuthor from \"./views/NewAuthor\";\nimport EditAuthor from \"./views/EditAuthor\";\nimport NotFound from \"./views/NotFound\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Favorite authors</h1>\n      <Switch>\n        <Route exact path=\"/\">\n          <Authors />\n        </Route>\n\n        <Route exact path=\"/new\">\n          <NewAuthor />\n        </Route>\n\n        <Route exact path=\"/edit/:id\">\n          <EditAuthor />\n        </Route>\n\n        <Route component={NotFound} />\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}